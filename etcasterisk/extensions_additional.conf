;!
;! Automatically generated configuration file
;! Filename: extensions.conf (/etc/asterisk/extensions_additional.conf)
;! Generator: Manager
;! Creation Date: Sun Sep 30 20:48:35 2012
;!

[macro-trunkdial-failover-0.4]
exten = s,1,GotoIf($[${LEN(${FMCIDNUM})} > 6]?1-fmsetcid,1)
exten = s,n,Set(CDR(inoutstatus)=1)
exten = s,n,NoOp(${CALLERID(num)})
exten = s,n,Macro(monitor-enable,${CALLERID(num)})
exten = s,n,Set(DB(KESIXUSER/${CALLERID(num)}/lastcaller)=${ARG1})
exten = s,n,GotoIf($[${LEN(${GLOBAL_OUTBOUNDCIDNAME})} > 1]?1-setgbobname,1)
exten = s,n,Set(CALLERID(num)=${IF($[${LEN(${CID_${CALLERID(num)}})} > 2]?${CID_${CALLERID(num)}}:)})
exten = s,n,Set(CALLERID(all)=${IF($[${LEN(${ARG5})} > 2]?${ARG5}:)})
exten = s,n,GotoIf($[${LEN(${CALLERID(num)})} > 6]?1-dial,1)
exten = s,n,Set(CALLERID(all)=${IF($[${LEN(${CID_${ARG3}})} > 6]?${CID_${ARG3}}:${GLOBAL_OUTBOUNDCID})})
exten = s,n,Set(CALLERID(all)=${IF($[${LEN(${ARG5})} > 2]?${ARG5}:)})
exten = s,n,Goto(1-dial,1)
exten = 1-setgbobname,1,Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME})
exten = 1-setgbobname,n,Goto(s,3)
exten = 1-fmsetcid,1,Set(CALLERID(num)=${FMCIDNUM})
exten = 1-fmsetcid,n,Set(CALLERID(name)=${FMCIDNAME})
exten = 1-fmsetcid,n,Goto(s,4)
exten = 1-dial,1,Dial(${ARG1})
exten = 1-dial,n,NoOp(Get dial status : ${DIALSTATUS})
exten = 1-dial,n,Gotoif(${LEN(${ARG2})} > 0 ?1-${DIALSTATUS},1:1-out,1)
exten = 1-CHANUNAVAIL,1,Dial(${ARG2})
exten = 1-CHANUNAVAIL,n,Goto(1-out,1)
exten = 1-CONGESTION,1,Dial(${ARG2})
exten = 1-CHANUNAVAIL,n,Goto(1-out,1)
exten = 2-out,1,NoOp(Get dial status : 2-out)
exten = 2-out,n,Goto(2-${DIALSTATUS},1)
exten = 2-CHANUNAVAIL,1,Dial(${ARG2})
exten = 2-CHANUNAVAIL,n,Macro(outisbusy)
exten = 2-CHANUNAVAIL,n,Hangup()
exten = 2-CONGESTION,1,Macro(outiscongestion)
exten = 2-CONGESTION,n,Hangup()
exten = 2-NOANSWER,1,Macro(outisbusy)
exten = 2-NOANSWER,n,Hangup()
exten = 2-BUSY,1,Macro(outisbusy)
exten = 2-BUSY,n,Hangup()
exten = h,1,Hangup()

[CallingRule_1900]
exten = 1900!,1,Goto(voicemenu-custom-2,s,1)  ; BLOCK 1900 calls

[app-echo-test]
exten => *43,1,Answer
same => n,Wait(1)
same => n,Playback(demo-echotest)
same => n,Echo()
same => n,Playback(demo-echodone)
same => n,Hangup

[app-speakextennum]
exten => *44,1,Answer
same => n,Wait(1)
same => n,Macro(user-callerid,)
same => n,Playback(your)
same => n,Playback(extension)
same => n,Playback(number)
same => n,Playback(is)
same => n,SayDigits(${CALLERID(num))
same => n,Wait(2)
same => n,Playback(goodbye)
same => n,Hangup
; end of [app-speakextennum]

[app-speakingclock]
exten => *45,1,Answer
same => n,Wait(1)
same => n,Set(NumLoops=0)
same => n,(start),Set(FutureTime=$[${EPOCH} + 11])
same => n,Playback(at-tone-time-exactly)
same => n,GotoIf($["${TIMEFORMAT}" = "kM"]?hr24format)
same => n,SayUnixTime(${FutureTime},,Zulu,HNS)
same => n,Goto(waitloop)
same => n,(hr24format),SayUnixTime(${FutureTime},${timezone},HNS)
same => n,(waitloop),Set(TimeLeft=$[${FutureTime} - ${EPOCH}])
same => n,GotoIf($[${TimeLeft} < 1]?playbeep)
same => n,Wait(1)
same => n,Goto(waitloop)
same => n,(playbeep),Playback(beep)
same => n,Wait(5)
same => n,Set(NumLoops=$[${NumLoops} + 1])
same => n,GotoIf($[${NumLoops} < 5]?start)
same => n,Playback(goodbye)
same => n,Hangup

[app-speakingtime]
exten => *46,1,NoOp(Time: ${EXTEN} ${timezone})
; the amount of delay is set for English; you may need to adjust this time
; for other languages if there's no pause before the synchronizing beep.
same => n,Set(FUTURETIME=$[${EPOCH} + 12])
same => n,SayUnixTime(${FUTURETIME},Zulu,HNS)
same => n,SayPhonetic(z)
; use the timezone associated with the extension (sip only), or system-wide
; default if one hasn't been set.
same => n,SayUnixTime(${FUTURETIME},${timezone},HNS)
same => n,Playback(spy-local)
same => n,WaitUntil(${FUTURETIME})
same => n,Playback(beep)
same => n,Hangup()
exten = *47,1,NoOp(Time: ${EXTEN} ${timezone})
same => n,Set(CALLERID(num)=${EXTEN})
same => n,Wait(0.25)
same => n,Answer()
same => n,Playback(vm-from)
same => n,SayDigits(${CALLERID(ani)})
same => n,Wait(1.25)
same => n,SayDigits(${CALLERID(ani)})
same => n,Hangup()
exten = *234,1,Wait(1)
same => n,Set(CALLERID(num)=*234)
same => n,Playback(tt-monkeys)
same => n,Hangup()
exten = 1235,1,NoOp(Time: ${EXTEN} ${timezone})
same => n,Wait(0.25)
same => n,Answer()
same => n,Set(FUTURETIME=$[${EPOCH} + 12])
same => n,SayUnixTime(${FUTURETIME},Zulu,HNS)
same => n,SayPhonetic(z)
same => n,SayUnixTime(${FUTURETIME},${timezone},HNS)
same => n,Playback(spy-local)
same => n,WaitUntil(${FUTURETIME})
same => n,Playback(beep)
same => n,Hangup()

[app-test-number]
;press # to finish recording
exten => *48,1,Ringing()
same => n,Wait(3)
same => n,Answer()
same => n,Playback(dir-multi3)
same => n,Wait(1)
same => n,SayDigits(${CALLERID(num)})
same => n,Wait(1)
same => n,Playback(channel)
same => n,Wait(1)
same => n,SayAlpha(${CHANNEL})
same => n,Wait(1)
same => n,Playback(readback-instructions)
same => n,Record(/tmp/*62-${UNIQUEID}.wav,0,30)
same => n,Playback(/tmp/*62-${UNIQUEID})
same => n,System(rm /tmp/*62-${UNIQUEID}.wav)
same => n,Wait(1)
same => n,Playback(vm-goodbye)
same => n,Hangup()

[app-fake-outgoing-context]
exten => *49,1,Answer()
same => n,Monitor(wav,"00000000",m)
same => n,Dial(DAHDI/g2/8888)
same => n,Hangup()

[app-play-record]
;play recording, it is something for RC1 remplacing
exten => _*50XXXXXXXX,1,Answer()
same => n,WaitForSilence(2000,1,90)
same => n,Playback(sip-silence)
same => n,Playback(/var/spool/asterisk/monitor/${EXTEN:3})
same => n,Hangup()
exten => _56660XXXXX,1,Goto(default,6${EXTEN:1},1)

[app-last-caller]
exten = *69,1,Answer
same => n,Playback(last-num-to-call)
same => n,Set(number=${DB(KESIX/USERS/${CALLERID(num)}/lastcaller)})  ; Look up the last caller for this extension
same => n,GotoIf($["${number}" = ""]?s-nonum,1:5)  ; If $number is blank, jump to unidentified label
same => n,Wait(0.5)
same => n,SayDigits(${number})
same => n,Wait,1
same => n,Playback(weasels-eaten-phonesys)
same => n,Hangup
exten => s-nonum,1,Playback(unidentified-no-callback)
exten => s-nonum,n,Playback(vm-goodbye)
exten => s-nonum,n,Hangup

[app-fax-in-old]
;fax handler 
;You can include this context to incomming context  : exten => fax,1,Goto(app-fax-in,fax,1) 
;Tested with an disconnected extention 6000 
exten => fax,1,Verbose(3,Incoming fax)
; folder where your incoming faxes will initially be stored
same => n,Set(MAILFILE=/tmp/mail_${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}.txt)
same => n,NoOp(Mail file : ${MAILFILE})
same => n,Set(TIFFFILE=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}_${CALLERID(num)})
same => n,Set(FAXDEST=/tmp)
same => n,Set(TIFF=/var/spool/fax_in/${TIFFFILE}.tiff)
same => n,Set(PDF=/var/www/fax/${TIFFFILE}.pdf)
same => n,Set(FAXOPT(ecm)=yes)
same => n,Set(FAXOPT(headrinfo)=Fax)
same => n,Set(FAXOPT(localstationid)=0493941157)
same => n,Set(FAXOPT(maxrate)=14400)
same => n,Set(FAXOPT(minrate)=2400)
same => n,ReceiveFax(${TIFF})
same => n,Verbose(3,- Fax receipt completed with status: ${FAXSTATUS})
same => n,SET(PDFFILE=/var/www/fax/${FAXFILE}.pdf)
same => n,Verbose(3,- Converting to pdf file)
same => n,System(tiff2pdf ${TIFF} -o ${PDF})
same => n,NoOp(${TIFF} removed from system)
same => n,System(rm ${TIFF})
;
same => n,NoOp(Preparing mail )
same => n,System(echo "Hello," >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "You got a fax  : ${EXTEN}" >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "Fax from : ${CALLERID(num)}" >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "You can see fax in the address : " >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "http://${ADDRESSFAXVIEWERSERVER}/fax/${TIFFFILE}.pdf" >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "Best Regards" >> ${MAILFILE})
same => n,System(mail -s "New Fax for ${EXTEN}" ${FAXMAILNOTIFICATION} < ${MAILFILE})
;same => n,System(rm ${MAILFILE})

[app-fax-in]
exten => receive,1,NoOP(------------------- FAX from ${CALLERID(number)} ------------------)
same => n,Answer()
same => n,Set(FILENAME=fax-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${CALLERID(number)})
same => n,Set(FAXFILE=/var/spool/asterisk/fax/receive/${FILENAME}.tif)
same => n,Set(FAXOPT(headerinfo)=Received by ${CALLERID(number)} ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M)})
same => n,Set(FAXOPT(localstationid)=OFFICE)
same => n,Set(FAXOPT(maxrate)=14400)
same => n,Set(FAXOPT(minrate)=2400)
same => n,NoOp(FAXOPT(ecm) : ${FAXOPT(ecm)})
same => n,NoOp(FAXOPT(headerinfo) : ${FAXOPT(headerinfo)})
same => n,NoOp(FAXOPT(localstationid) : ${FAXOPT(localstationid)})
same => n,NoOp(FAXOPT(maxrate) : ${FAXOPT(maxrate)})
same => n,NoOp(FAXOPT(minrate) : ${FAXOPT(minrate)})
same => n,NoOp(**** RECEIVING FAX : ${FAXFILE} ****)
same => n,ReceiveFAX(${FAXFILE})
same => n,Hangup()
exten => h,1,NoOP(------------------- FAX from ${CALLERID(number)} ------------------)
exten => h,n,NoOP(------------------- STATUS ${FAXSTATUS} ${FAXERROR} ------------------)
exten => h,n,system(/var/lib/asterisk/agi-bin/fax/fax-incomming.py --to ${FAXMAILNOTIFICATION} --from ${FAXFROMNOTIFICATION} --file ${FAXFILE})

[app-fax-out]
exten => 1,1,Answer()
same => n,Dial(${FAXRCPT})
same => n,Hangup(1)  ;This should jump to Hangup Priority 2 and skip the script
exten => *66,1,Answer()
same => n,NoOp(**** SENDING FAX ****)
same => n,Wait(6)
same => n,Set(FAXNUM=${FAXNUM})
same => n,Set(FAXFILE=${FULLPATH})
; Send the fax
same => n,NoOp(**** SENDING FAX : ${FAXFILE} ****)
same => n,SendFAX(${FAXFILE})
; Hangup! Print FAXOPTs
same => n,NoOp(FAXOPT(status) : ${FAXOPT(status)})
same => n,NoOp(FAXOPT(statusstr) : ${FAXOPT(statusstr)})
same => n,NoOp(FAXOPT(error) : ${FAXOPT(error)})
same => n,Set(FAXSTATUS=${FAXOPT(status)})
same => n,Set(FAXSTATUSSTR=${FAXOPT(statusstr)})
same => n,Set(FAXERROR=${FAXOPT(error)})
same => n,Hangup(1)
;send email to the sender notifying of status
exten => h,1,system(/var/lib/asterisk/agi-bin/fax-out-notify.py --to ${FAXMAILNOTIFICATION} --from ${FAXFROMNOTIFICATION} --status "${FAXSTATUS}" --statusstr "${FAXSTATUSSTR}" --error "${FAXERROR}" --faxnum "${FAXNUM}"  ;
exten => h,2,Hangup

[app-ext-not-found]
exten => _X.,1,Playback(vm-goodbye)
same => n,Macro(hangupcall)

[app-spyer]
exten => _X.,1,Dial(SIP/${EXTEN},,)
same => n,,Hangup()

[app-bad-number]
;
exten => _X.,1,ResetCDR()
same => n,NoCDR()
same => n,Wait(1)
same => n,Playback(silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer)
same => n,Wait(0.5)
same => n,Playback(goodbye)
same => n,Congestion(20)
same => n,Hangup()
;
exten => _*.,1,ResetCDR()
same => n,NoCDR()
same => n,Wait(1)
same => n,Playback(silence/1&feature-not-avail-line&silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer)
same => n,Wait(0.5)
same => n,Playback(goodbye)
same => n,Wait(0.5)
same => n,Congestion(20)
same => n,Hangup()

[macro-cdrincoming]
exten = s,1,Set(CDR(inoutstatus)=2)

[macro-monitor-enable]
exten => s,1,NoOp(start monitor checking)
same => n,NoOp(${ARG1})
same => n,GotoIf($["${BLINDTRANSFER}" = ""]?check)
same => n,ResetCDR(w)
same => n,StopMixMonitor()
same => n(check),ExecIf($["${ARG1}"=""]?MacroExit())
same => n,Set(RECENABLE="${DB(KESIX/USERS/${ARG1}/recording)}")
same => n,ExecIf($[${RECENABLE} != "yes"]?MacroExit())
same => n,Set(MONITOR_FILE=/var/spool/asterisk/monitor/${UNIQUEID})
same => n,NoOp(${MONITOR_FILE}.wav)
same => n,MixMonitor(${MONITOR_FILE}.wav,m)
same => n,Set(CDR(recordfile)=${MONITOR_FILE}.wav)
same => n,Playback(beep)
same => n,MacroExit()

[macro-recpause]
exten => s,1,Playback(disabled)
same => n,PauseMonitor

[macro-recunpause]
exten => s,1,Playback(enabled)
same => n,UnpauseMonitor

[macro-recstart]
exten => s,1,Set(FNAME=callrec_${MACRO_EXTEN}_${UNIQUEID}_GWTEST_${EPOCH})
same => n,Monitor(wav,${FNAME})

[macro-hangupcall]
exten => s,1,NoOp(macro hangupcall called)
;same => n,Set(CDR(dst)=${CHANNEL})
same => n,Set(CDR(dnid)=${dnid})
;same => n,ResetCDR(w)
;same => n,NoCDR()
same => n,Wait(1)
same => n,Hangup()

[macro-outisbusy]
exten => s,1,Playback(the-number-u-dialed&no-longer-in-service&check-number-dial-again,noanswer)
same => n,Macro(hangupcall)

[sipp]
exten => 5005,1,Answer
exten => 5005,2,Background(tt-monkeys)
exten => 5005,4,Hangup

exten => 5006,1,Answer
same => n,Goto(sipp,5005,1)
same => n,Hangup

exten => 5007,1,Answer
same => n,Macro(cdrincoming)
same => n,Set(dnid=${EXTEN})
;same => n,Set(CDR(dst)=${EXTEN})
same => n,Goto(ringroups-custom-1,s,1)
;same => n,Set(CDR(dst)=${CHANNEL})
same => n,Hangup

exten => 5008,1,Answer
same => n,Goto(sipp,5007,1)
same => n,NoOp("I hangup call")
same => n,Hangup

[macro-outiscongestion]
exten => s,1,Playback(cannot-complete-network-error&check-number-dial-again,noanswer)
same => n,Macro(hangupcall)
